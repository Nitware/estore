@using Telerik.Web.Mvc.UI;
@using SmartStore.GTPay.Models;
@model ConfigurationModel


@(Html.Telerik().Grid<TransactionLog>()
        .Name("transaction-log-grid")
        //.ClientEvents(events => events.OnComplete("Grid_onComplete"))
        .DataKeys(keys => keys.Add(x => x.TransactionRefNo).RouteKey("TransactionRefNo"))
        .Columns(columns =>
        {
            columns.Command(commands =>
            {
                commands.Edit().Text("Update Status");

                //// Declare a custom command named "showDetails"
                //commands.Custom("showDetails")
                //        // Specify that the action command will make ajax requests
                //        .Ajax(true)
                //        // Set the text which the command button will display
                //        .Text("Requery")
                //        // Specify the action method which the command will invoke
                //        .Action("UpdateTransactionLogBy", "GTPay", new { area = "SmartStore.GTPay" });

            }).Width(90);

            columns.Bound(x => x.TransactionStatus).ReadOnly().Width(80);
            columns.Bound(x => x.TransactionRefNo).ReadOnly().Width(180);
            columns.Bound(x => x.TransactionDate).Format("{0:yyyy-MM-dd HH:mm:ss}").ReadOnly().Width(135);
            columns.Bound(x => x.ApprovedAmount).Format("{0:0,0.00}").ReadOnly().Width(90);
            columns.Bound(x => x.ResponseCode).ReadOnly().Width(110);
            columns.Bound(x => x.ResponseDescription).ReadOnly().Width(160);
            columns.Bound(x => x.MerchantReference).ReadOnly().Width(150);
            columns.Bound(x => x.DatePaid).Format("{0:yyyy-MM-dd HH:mm:ss}").ReadOnly().Width(135);
        })
         .DataBinding(dataBinding =>
         {
             dataBinding.Ajax()
                .Select("LoadLatestTransactionList", "GTPay", new RouteValueDictionary() { { "area", "SmartStore.GTPay" } })

                //.Select("LoadLatestTransactionList", "GTPay", new { area = "SmartStore.GTPay", transactionRef = Model.TransactionRequest.ReferenceNo, transactionDate = Model.TransactionRequest.Date })
                .Update("UpdateTransactionLog", "GTPay", new RouteValueDictionary() { { "area", "SmartStore.GTPay" } });
         })
        .Editable(x =>
        {
            x.Mode(GridEditMode.InLine);
        })
        .Scrollable(s => s.Height(1000))
        //.HtmlAttributes(new { style = "max-height:1000px;" })
        .Sortable(x =>
        {
            x.AllowUnsort(true);
            x.SortMode(GridSortMode.SingleColumn);
        })
        //.ClientEvents(events => events.OnDataBinding("onDataBinding").OnDataBound("onDataBound"))
        //.ClientEvents(events => events.OnDataBinding("onDataBinding"))

        //.Pageable(settings => settings.PageSize(25).Position(GridPagerPosition.Both))
        .PreserveGridState()
        .EnableCustomBinding(true)
)
