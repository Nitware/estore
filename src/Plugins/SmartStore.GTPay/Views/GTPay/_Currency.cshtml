@using SmartStore.GTPay.Models;
@using SmartStore.Web.Framework;
@using SmartStore.Web.Framework.UI;
@using Telerik.Web.Mvc.UI;
@model ConfigurationModel

<div>

    @(Html.Telerik().Grid<TransactionLog>(Model.TransactionLogsForGrid.Data)
        .Name("Grid")
        .DataKeys(keys => keys.Add(x => x.TransactionRefNo).RouteKey("TransactionRefNo"))
        .Columns(columns =>
        {
            //columns.Command(commands =>
            //{
            //    commands.Edit();
            //}).Width(180);

            //columns.Bound(x => x.TransactionRefNo)
            //       .ClientTemplate("<a href=\"Edit/<#= Id #>\"><#= TransactionRefNo #></a>");
            columns.Bound(x => x.TransactionStatus);
            columns.Bound(x => x.TransactionRefNo);
            columns.Bound(x => x.TransactionDate).Format("{0:yyyy-MM-dd HH:mm:ss}");
            columns.Bound(x => x.ApprovedAmount).Format("{0:0,0.00}");
            columns.Bound(x => x.ResponseCode);
            columns.Bound(x => x.ResponseDescription);
            columns.Bound(x => x.MerchantReference);
            //columns.Bound(x => x.Gateway);
            columns.Bound(x => x.DatePaid).Format("{0:yyyy-MM-dd HH:mm:ss}");
        })
         .DataBinding(dataBinding =>
         {
             dataBinding.Ajax()
                 .Select("TransactionList", "GTPay", new RouteValueDictionary() { { "area", "SmartStore.GTPay" } });
                 //.Update("TransactionLog", "GTPay", new RouteValueDictionary() { { "area", "SmartStore.GTPay" } });
         })
        .Editable(x =>
        {
            x.Mode(GridEditMode.InLine);
        })
        //.ToolBar(commands => commands.Edit())
        //.ClientEvents(events => {
        //    events.OnEdit("onEdit");
        //    //events.OnDataBound("onProductCategoryDataBound");
        //})
        .Pageable(settings => settings.PageSize(Model.GridPageSize).Position(GridPagerPosition.Both))
        .PreserveGridState()
        .EnableCustomBinding(true)
    )
</div>



@*@using (Html.BeginForm("CurrencyUpdate", "GTPay"))
{*@
   
                <table class="adminContent">
                    <tr>
                        <td>
                            @(Html.Telerik().Grid<GTPayCurrencyModel>(Model.GTPayCurrencyGrid.Data)
                                .Name("Grid")
                                .DataKeys(keys => keys.Add(x => x.Id).RouteKey("Id"))
                                .Columns(columns =>
                                {
                                    columns.Bound(x => x.Code);
                                    columns.Bound(x => x.Alias);
                                    columns.Bound(x => x.Name);
                                    columns.Bound(x => x.Gateway);
                                    columns.Bound(x => x.LeastValueUnitMultiplier);
                                    columns.Bound(x => x.IsSupported);

                                    columns.Command(commands =>
                                    {
                                        commands.Edit();
                                        //commands.Delete();
                                    }).Width(180);

                                })
                                .Editable(x =>
                                {
                                    x.Mode(GridEditMode.InLine);
                                })
                                .DataBinding(dataBinding =>
                                {
                                    dataBinding.Ajax()
                                        .Select("CurrencyList", "GTPay", new RouteValueDictionary() { { "area", "SmartStore.GTPay" } })
                                        .Update("CurrencyUpdate", "GTPay", new RouteValueDictionary() { { "area", "SmartStore.GTPay" } });
                                    //.Delete("CurrencyDelete", "GTPay", new RouteValueDictionary() { { "area", "SmartStore.GTPay" } });
                                })
                                .Pageable(settings => settings.PageSize(Model.GridPageSize).Position(GridPagerPosition.Both))
                                .PreserveGridState()
                                .EnableCustomBinding(true))
                        </td>
                    </tr>
                </table>
      





@*}*@



