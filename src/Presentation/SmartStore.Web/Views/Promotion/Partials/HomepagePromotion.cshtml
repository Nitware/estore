@model IList<PromotionModel>

@using SmartStore.Web.Models.Promotions;

@{
   
    if (Model.Count == 0)
    {
        return;
    }


}
<style>

    .promotion-section {
        box-sizing: border-box;
    }

    *,
    *:before,
    *:after {
        box-sizing: inherit;
    }

    .promotion-section {
        min-height: 100%;
    }

    .promo {
        /*margin: 64px auto;
  max-width: 640px;
  width: 94%;*/
        text-align: center;
    }
 
/**
 * Circle Styles
 */

    .circle {
        position: relative;
        display: block;
        margin: 2em 0;
        background-color: transparent;
        color: #222;
        text-align: center;
        font-size: 1.5vw;

        padding-bottom: 100%;
        width: 100%;
        height: 0;
        border-radius: 50%;
        background-color: #fff;
        content: "";
    }

        /*.circle:after {
            display: block;
            padding-bottom: 100%;
            width: 100%;
            height: 0;
            border-radius: 50%;
            background-color: #fff;
            content: "";
        }*/

    .circle__inner {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .circle__wrapper {
        display: table;
        width: 100%;
        height: 100%;
    }

    .circle__content {
        display: table-cell;
        padding: 1em;
        vertical-align: middle;
        /*background-color:navajowhite;*/
        line-height: 1;
    }
    .sm-item-black {
        background-color: black !important;
        color: white !important;
        
    }
    .sm-item {
        background-color: white !important;
        color: black !important;
        
    }
        .sm-item:hover,
        .sm-item-black:hover {
            /*color: gainsboro !important;*/
            font-weight: bold !important;
        }
    /*.sm-item-black:hover {
        color: red !important;
        font-weight: bold !important;
    }*/

    @@media (min-width: 200px) {
        .circle__content {
            font-size: 15px;
        }

        .sm-item, .sm-item-black{
            font-size: 7px !important;
        }
    }
    @@media (min-width: 320px) {
        .circle__content {
            font-size: 22px;
        }
         .sm-item, .sm-item-black{
            font-size: 8px !important;
        }
    }
    @@media (min-width: 480px) {
        .circle__content {
            font-size: 28px;
        }
         .sm-item, .sm-item-black{
            font-size: 9px !important;
        }
    }
    @@media (min-width: 570px) {
        .circle__content {
            font-size: 28px;
        }
       
        .sm-item, .sm-item-black{
            font-size: 9px !important;
        }
    }
    @@media (min-width: 620px) {
        .circle__content {
            font-size: 28px;
        }
         .sm-item, .sm-item-black{
            font-size: 9px !important;
        }
    }
    @@media (min-width: 680px) {
        .circle__content {
            font-size: 30px;
        }
        .sm-item, .sm-item-black {
            font-size: 10px !important;
        }
    }

    @@media (min-width: 800px) {
        .circle__content {
            font-size: 24px;
        }
    }
    @@media (min-width: 860px) {
        .circle__content {
            font-size: 28px;
        }
        .sm-item, .sm-item-black{
            font-size: 10px !important;
        }
    }
    @@media (min-width: 920px) {
        .circle__content {
            font-size: 28px;
        }
         .sm-item, .sm-item-black{
            font-size: 10px !important;
        }
    }
    @@media (min-width: 1000px) {
        .circle__content {
            font-size: 32px;
        }
        .sm-item, .sm-item-black{
            font-size: 11px !important;
        }
    }

	ol, ul {
		list-style: none;
	}

	.slide-menu {
		/*position: absolute;
		top: 55%;
		left: 45%;*/


		/*width: 100px;*/
		margin: 0 auto;
		padding: 0;
		z-index: 100;
	}

	.slide-menu-shop-now.btn-white-blk-border {
		background: #fff;
		color: #000;
		outline: 2px solid #333;


	}

	.slide-menu-shop-now {
		text-align: center;
		font-family: "AvenirHeavy", arial, sans-serif;
		list-style-type: none;
		/*padding: 2px 0px 0px;*/
		font-size: 10px;
	}

	.slide-menu-shop-now a, .slide-menu-shop-now a:hover {
		text-decoration: none;
		/* padding: 10px; */
		padding: 6px;
		display: block;
	}

	.slide-menu-shop-now a, .slide-menu-shop-now a:hover {
		color: black;
	}

	.slide-menu .submenu {
		display: none;
		padding: 0;
		margin: 0;
	}

		.slide-menu .submenu li {
			/*padding: 5px 0;*/
			border-top: 1px solid #ccc;
			list-style-type: none;
			text-align: left;
		}

			.slide-menu .submenu li a {
				text-transform: uppercase;
			}

	article.art-style-1 {
		-webkit-background-size: cover;
		-moz-background-size: cover;
		-o-background-size: cover;
		background-size: cover;
		/*margin: 1%;
		min-width: 98.5%;*/
		/*margin-left: 25% !important;*/
		/*border: 2px solid orange !important;*/
		/*padding: 15px;*/
		/*min-height: 450px;*/


	}
	article.art-style {
		-webkit-background-size: cover;
		-moz-background-size: cover;
		-o-background-size: cover;
		background-size: cover;
		/*float: left;
		margin: 1%;
		min-width: 48.58%;
		padding: 15px;*/
		/*min-height: 400px;*/

		/*border: 2px solid orange !important;*/
	}

	article.art-style-3 {
		-webkit-background-size: cover;
		-moz-background-size: cover;
		-o-background-size: cover;
		background-size: cover;
		/*float: left;
		margin: 1%;
		min-width: 31.9%;
		padding: 15px;*/
		/*min-height: 400px;*/

		/*border: 2px solid orange !important;*/
	}

	.art-genericname {
		width: 95%;
		text-align: center;
		margin: 0 auto;
	}

	.text-frame {
		border: 2px solid #000;
		padding: 5px;
		border-radius: 2px;
		-webkit-border-radius: 3px;
		-moz-border-radius: 3px;

	}

	.discount-amount::first-letter {
		font-size: 200%;
		color: #8A2BE2;
	}

.gutter-10.row {
  margin-right: -5px;
  margin-left: -5px;
}
.gutter-10 > [class^="col-"], .gutter-10 > [class^=" col-"] {
  padding-right: 5px;
  padding-left: 5px;
}


article div p{
    color:blue;
    font-size: 7px;
}
article div .text-title{
    font-size: 16px;
    /*font-weight:bold;*/
}
article div .text-sub-title{
    font-size: 11px;
}
.discount-text{
    font-size:39px;
    font-weight:bolder;
    font-family:'Arial Rounded MT';
}
article div h2{
    color:yellowgreen;
    font-size: 9px;
    
}
  
</style>



@functions
{
    //private string GetDiscountAmtPercFontSize(int fontsize)
    //{
    //    //fontsize = fontsize > 0 ? fontsize : 45;
    //    //return ("font-size:" + (fontsize + 20) + "px;");

    //    return "font-size:2rem;";
    //}
    //private string GetStyle(string fonttype, int fontsize, string type)
    //{
    //    switch (type)
    //    {
    //        case "title":
    //            fontsize = fontsize > 0 ? fontsize : 25;
    //            break;
    //        case "subTitle":
    //            fontsize = fontsize > 0 ? fontsize : 20;
    //            break;
    //        case "discountText":
    //            fontsize = fontsize > 0 ? fontsize : 45;
    //            break;
    //        default:
    //            break;
    //    }
    //    string result = "";

    //    if (!string.IsNullOrEmpty(fonttype))
    //        result = "font-family:" + fonttype + ";";

    //    if (fontsize > 0)
    //        result = "font-size:" + fontsize + "px;";

    //    return result;
    //}

    private string GetStyle(string fontFamily)
    {
        string result = "";

        if (!string.IsNullOrEmpty(fontFamily))
            result = "font-family:" + fontFamily + ";";

        return result;
    }
    private string GetClassName(string font_color)
    {
        string result = "text-default";

        switch (font_color)
        {
            case "0":
                result = "text-default";
                break;
            case "1":
                result = "text-primary";
                break;
            case "2":
                result = "text-success";
                break;
            case "3":
                result = "text-info";
                break;
            case "4":
                result = "text-warning";
                break;
            case "5":
                result = "text-danger";
                break;
            case "6":
                result = "text-white";
                break;
            default:
                break;
        }

        return result;
    }
    private string GeteTextFrameStyle(string frame_type, string frame_background, int height, int width)
    {
        string result = "border-width:0;padding-bottom:10px;";
        if (!string.IsNullOrEmpty(frame_background))
            result += "color:#FFF;background-color:#" + frame_background + ";";


        //height = height > 0 ? height : 300;
        //width = width > 0 ? width : 300;

        //result += result + "height:" + height + "px;width:" + width + "px;";
        //result += result + "px;width:" + width + "px;";

        switch (frame_type)
        {
            case "circle":
                {
                    //result += "border-radius:50%;padding:20px;";
                    //result += "margin-top:50px;border-radius:" + height + "px;-moz-border-radius:" + height + "px;-webkit-border-radius:" + height + "px;";
                }
                break;
            case "oval":
                {
                    //result += "margin-top:50px;";
                    //result += "margin-top:50px;border-radius:" + height + "px;-moz-border-radius:" + height + "px;-webkit-border-radius:" + height + "px;";
                }
                break;
            case "square":
            case "rectangle":
                {
                    result += "padding:10px;";
                    //result += "border-radius:" + height + "px;-moz-border-radius:" + height + "px;-webkit-border-radius:" + height + "px;";
                }
                break;
            default:
                break;
        }

        return result;
    }

    private string GetCriclePadding(string frame_type,int fontsize)
    {
        string style = "";
        if (frame_type == "circle")
        {if (fontsize <= 25)
            {
                style = "padding-left:28px;padding-right:28px;";
            }
            else if(fontsize<=30)
            {
                style = "padding-left:30px;padding-right:30px;";
            }
        }
        return style;
    }

    bool useDefaultClass = false;
    string className = "art-style";
    int virtualCount = 1;
}

<div class="block" >
    <div class="heading heading-center">
        @*<h3 class="heading-title fs-h1">@T("HomePage.Products")</h3>*@
        <h3 class="heading-title fs-h1">Promotions</h3>
    </div>
</div>


@*<div class="artlist artlist-grid artlist-6-cols artlist-boxed artlist-homepage-categories">*@
    <div class="block promotion-section">
    <div class="promo">
        @{
            int rows = 0;
            int columns = 0;
            int excessRow = 0;
            int totalAdvert = Model.Count;
            string cssClass = null;

            if (totalAdvert == 1)
            {
                rows = 1;
                columns = 1;
                cssClass = "col-md-12";
            }
            else if (totalAdvert == 2)
            {
                rows = 1;
                columns = 2;
                cssClass = "col-md-6";
            }
            else if (totalAdvert >= 3)
            {
                excessRow = totalAdvert % 2;
                rows = Math.Abs(totalAdvert / 2);
                cssClass = "col-md-6";
                columns = 2;
            }

            int row = 0;
            int column = 0;
            rows += excessRow;
            PromotionModel[,] promotions = new PromotionModel[rows, columns];
            string[,] cssClasses = new string[rows, columns];

            for (int i = 0; i < Model.Count; i++)
            {
                if (column == (columns - 1))
                {
                    promotions[row, column] = Model[i];
                    cssClasses[row++, column] = cssClass;
                    column = 0;
                }
                else
                {
                    if (excessRow > 0 && i == Model.Count - 1)
                    {
                        promotions[row, 0] = Model[i];
                        cssClasses[row, 0] = "col-md-12";
                        continue;
                    }

                    promotions[row, column] = Model[i];
                    cssClasses[row, column++] = cssClass;
                }
            }
            
            for (int r = 0; r < rows; r++)
            {
                <div class="row gutter-10 " style="margin-bottom:10px">
                    @for (int c = 0; c < columns; c++)
                    {
                        var item = promotions[r, c];
                        if (item == null)
                        {
                            continue;
                        }
                        
                        var picture = item.PictureModel;
                        var url = Url.RouteUrl("Category", new { SeName = item.Title });
                        var menuColorClass = item.MenuColor == "white" ? "sm-item" : "sm-item-black";
                        
                        <div class="@cssClasses[r, c]">
                            <img src="@picture.ImageUrl" style="width:100%;image-rendering:auto; margin:5px 0; " />

                            <div style="width:50%; height:auto; position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%); opacity:0.9; ">
                                @if (item.Title.HasValue() || item.SubTitle.HasValue() || item.Description.HasValue() || item.DiscountPercentage > 0 || item.DiscountText.HasValue())
                                {
                                    if (item.TextFrameBackground.HasValue() && item.TextFrameType == "circle")
                                    {
                                        <div class="circle" style="background-color:@item.TextFrameBackground">
                                            <div class="circle__inner">
                                                <div class="circle__wrapper">
                                                    <div class="circle__content">
                                                        @RenderPromotion(item)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="circle">
                                            <div class="circle__inner">
                                                <div class="circle__wrapper">
                                                    <div class="circle__content" style="background-color:@item.TextFrameBackground">
                                                        @RenderPromotion(item)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }

                                <div style="margin-top:10px;">
                                    @if (item.Categories != null && item.Categories.Count > 0)
                                    {
                                        <ul class="slide-menu " onclick="javascript:toggleShopNow(this)" style="position:absolute;top: 82%;left: 50%;transform: translate(-50%, -50%);">
                                            <li class="slide-menu-shop-now btn-white-blk-border">
                                                <a href="javascript:void(0);" class="@menuColorClass"> SHOP NOW<span class="state-change @menuColorClass"> +</span></a>
                                                @foreach (var cat in item.Categories)
                                                {
                                                    var caturl = Url.RouteUrl("Category", new { SeName = cat.SeName, promoId = item.Id.ToString() });
                                                    <ul class="submenu">
                                                        <li>
                                                            <a href="@caturl" title="@cat.Name" class="@menuColorClass" >
                                                                <span>@cat.Name</span>
                                                            </a>
                                                        </li>
                                                    </ul>
                                                }
                                            </li>
                                        </ul>
                                    }
                                </div>
                            </div>
                            <div class="clearfix"></div>
                        </div>
                    }
                </div>
            }
        }
    </div>
</div>

@helper RenderPromotion(PromotionModel item)
{
    <div id="promo-title" class="@GetClassName(item.TitleFontColor)" style="font-size:0.9em; @GetStyle(item.TitleFontType)">@item.Title</div>
    <div id="promo-sub-title" class="@GetClassName(item.SubTitleFontColor)" style="font-size:0.6em; @GetStyle(item.SubTitleFontType)">@item.SubTitle</div>
    <div class="@GetClassName(item.DiscountTextFontColor)" style="font-weight:bold;@GetStyle(item.DiscountTextFontType)">
        @if (item.DiscountPercentage > 0)
        {
            <span id="promo-discount-percent" style="font-size:2.2em;font-weight:bold">@item.DiscountPercentage<text>%</text></span>
        }
        else
        {
            string discount = item.DiscountAmount > 0 ? item.DiscountAmount.ToString("#,#") : string.Empty;
            <span id="promo-discount-amount" style="font-size:1.2em;font-weight:bold">@discount</span>
        }
        <div id="promo-discount-text" style="font-size:0.6em; @GetStyle(item.DiscountTextFontType)">@item.DiscountText</div>
    </div>
}

@*@helper SetCircleBackground(string backgroundColor)
{
    <style>
        .circle:after {
            background-color:@backgroundColor;
        }
    </style>

}*@

<script>
	function toggleShopNow(elem) {
            var isOpened = false;
            if ($(elem).hasClass('open')) {
			$(elem).removeClass('open');
            }
		else {
                isOpened = true;
			$(elem).addClass('open');
            }
            if (isOpened) {
			$(elem).find('span.state-change').html(' -');
			$(elem).find('ul.submenu').show();
            }
            else {
			$(elem).find('span.state-change').html(' +');
			$(elem).find('ul.submenu').hide();
            }
        }
</script>
